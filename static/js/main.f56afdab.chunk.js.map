{"version":3,"sources":["styles/Global.js","styles/Header.styled.js","components/Header.jsx","styles/Input.styled.js","components/Input.jsx","styles/Categories.styled.js","components/ContactList.jsx","styles/Form.styled.js","styles/Button.styled.js","components/ContactCategory.jsx","utils/convertDate.js","components/EducationList.jsx","components/EducationCategory.jsx","components/EmploymentList.jsx","components/PreviewDetails.jsx","components/EmploymentCategory.jsx","components/ProjectList.jsx","components/ProjectCategory.jsx","components/TechnicalList.jsx","components/TechnicalCategory.jsx","components/RenderPDF.jsx","styles/Footer.styled.js","components/Footer.jsx","data/userData.js","styles/Resume.styled.js","utils/useHelper.js","App.jsx","index.jsx"],"names":["GlobalStyle","createGlobalStyle","StyledHeader","styled","header","Header","StyledInput","input","Input","props","data","required","text","name","type","description","example","isRequired","htmlFor","value","placeholder","onChange","event","Category","section","theme","mobile","Contact","article","Education","Employment","Project","Technical","HeaderList","list","length","map","entry","id","email","phone","website","github","linkedin","className","StyledForm","form","StyledButton","button","color","radius","top","size","ContactCategory","handleSubmit","handleChange","deleteList","onSubmit","onClick","convertDate","year","slice","toString","month","nameMonth","EducationList","deleteEntry","location","college","dateFrom","dateTo","degree","EducationCategory","EmploymentList","job","company","details","detail","PreviewDetails","deleteDetail","EmploymentCategory","addDetail","detailInput","useEffect","employForm","document","querySelector","monthInput","elements","checkboxInput","addEventListener","checked","removeAttribute","setAttribute","ProjectList","pName","link","ProjectCategory","TechnicalList","languages","frameLibs","tools","TechnicalCategory","global","StyleSheet","create","body","fontFamily","fontSize","paddingTop","paddingBottom","paddingHorizontal","bullet","left","position","paddingLeft","borderBottom","marginBottom","marginTop","flexDirection","justifyContent","alignItems","viewer","width","window","innerWidth","maxWidth","height","innerHeight","contactStyles","alignSelf","flex","textAlign","educationStyles","date","right","employmentStyles","projectStyles","technicalStyles","BasicDocument","contact","education","employment","project","technical","style","href","StyledFooter","footer","Footer","title","target","rel","contactData","uniqid","educationData","employmentData","projectData","technicalData","StyledResume","main","useHelper","useState","setList","setEntry","prop","newList","filter","e","preventDefault","prevState","concat","tablet","App","contactState","educationState","employmentState","projectState","technicalState","Global","fileName","loading","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f56afdab.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    *, *::before, *::after {\n        box-sizing: border-box;\n    }\n\n    * {\n        margin: 0;\n    }\n\n    html, body {\n        height: 100%;\n    }\n\n    body {\n        line-height: 1.5;\n        -webkit-font-smoothing: antialiased;\n    }\n\n    input, button, textarea, select {\n        font: inherit;\n    }\n\n    p, h1, h2, h3, h4, h5, h6 {\n        overflow-wrap: break-word;\n    }\n\n    #root, #__next {\n        isolation: isolate;\n    }\n`;\n\nexport default GlobalStyle;\n","import styled from \"styled-components\";\n\nconst StyledHeader = styled.header`\n  h1 {\n    font-style: italic;\n    font-weight: bold;\n    text-align: center;\n    text-shadow: 2px 2px #d5cece;\n  }\n`;\n\nexport default StyledHeader;\n","import React from \"react\";\nimport StyledHeader from \"../styles/Header.styled\";\n\nexport default function Header() {\n  return (\n    <StyledHeader>\n      <h1>CV Generator</h1>\n    </StyledHeader>\n  );\n}\n","import styled from \"styled-components\";\n\nconst StyledInput = styled.input`\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n\nexport default StyledInput;\n","import React from \"react\";\nimport StyledInput from \"../styles/Input.styled\";\n\nconst Input = (props) => {\n  const { data, required } = props;\n  const { text, name, type, description, example } = data;\n  // eslint-disable-next-line\n  const handleChange = (event) => props.onChange(event);\n\n  const isRequired = required === true;\n\n  return (\n    <>\n      <label htmlFor={name}>{description}</label>\n      <StyledInput\n        value={text}\n        name={name}\n        type={type}\n        placeholder={example}\n        onChange={handleChange}\n        required={isRequired}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import styled from \"styled-components\";\n\nexport const Category = styled.section`\n  margin: 0 auto;\n  margin-bottom: 2%;\n\n  & > h2 {\n    padding-left: 1.25%;\n  }\n\n  @media (max-width: ${({ theme }) => theme.mobile}) {\n    margin-bottom: 5%;\n  }\n`;\n\nexport const Contact = styled.article`\n  align-items: end;\n  display: grid;\n  grid-template-areas:\n    \"email name github\"\n    \"phone site linkedin\";\n  grid-template-columns: fit-content(125px) 1fr fit-content(125px);\n  margin: 0 auto;\n  width: 95%;\n\n  & > .email {\n    grid-area: email;\n  }\n\n  & > .name {\n    font-weight: bold;\n    font-size: 1.5rem;\n    grid-area: name;\n    text-align: center;\n  }\n\n  & > .github {\n    grid-area: github;\n    text-align: end;\n  }\n\n  & > .linkedin {\n    grid-area: linkedin;\n    text-align: end;\n  }\n\n  & > .phone {\n    grid-area: phone;\n  }\n\n  & > .site {\n    grid-area: site;\n    text-align: center;\n    text-transform: lowercase;\n  }\n\n  @media (max-width: ${({ theme }) => theme.mobile}) {\n    align-items: end;\n    display: grid;\n    grid-template-areas:\n      \"email name github\"\n      \"phone site linkedin\";\n    grid-template-columns: 0.6fr 1fr 0.6fr;\n  }\n`;\n\nexport const Education = styled.article`\n  align-items: end;\n  display: grid;\n  grid-template-areas:\n    \"location college date\"\n    \"degree degree degree\";\n  grid-template-columns: 0.35fr 0.7fr 0.35fr;\n  margin: 0 auto;\n  width: 95%;\n\n  & > .location {\n    font-weight: bold;\n    grid-area: location;\n  }\n\n  & > .college {\n    font-weight: bold;\n    grid-area: college;\n    text-align: center;\n  }\n\n  & > .date {\n    font-weight: bold;\n    grid-area: date;\n    text-align: end;\n  }\n\n  & > .degree {\n    grid-area: degree;\n    text-align: center;\n  }\n\n  button {\n    grid-column-end: span 4;\n  }\n\n  @media (max-width: ${({ theme }) => theme.mobile}) {\n    align-items: end;\n    display: grid;\n    grid-template-areas:\n      \"location college date\"\n      \"degree degree degree\";\n    grid-template-columns: 0.35fr 0.7fr 0.35fr;\n  }\n`;\n\nexport const Employment = styled.article`\n  display: grid;\n  grid-template-areas:\n    \"job company date\"\n    \"list . .\"\n    \"button . .\";\n  grid-template-columns: auto 1fr auto auto;\n  margin: 0 auto;\n  width: 95%;\n\n  & > .job {\n    font-weight: bold;\n    grid-area: job;\n  }\n\n  & > .company {\n    font-weight: bold;\n    grid-area: company;\n    text-align: center;\n  }\n\n  & > .date {\n    font-weight: bold;\n    grid-area: date;\n    text-align: end;\n  }\n\n  & > .list {\n    grid-area: list;\n    grid-column-end: span 4;\n  }\n\n  button {\n    grid-area: button;\n    grid-column-end: span 4;\n  }\n\n  @media (max-width: ${({ theme }) => theme.mobile}) {\n    display: grid;\n    grid-template-areas:\n      \"job company date\"\n      \"list . .\"\n      \"button . .\";\n    grid-template-columns: 0.5fr 1fr 0.5fr;\n  }\n`;\n\nexport const Project = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 2%;\n  margin: 0 auto;\n  width: 95%;\n\n  & > .title {\n    font-weight: bold;\n  }\n\n  & > .link {\n    font-style: italic;\n    line-height: 1;\n    text-transform: lowercase;\n  }\n`;\n\nexport const Technical = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  width: 95%;\n`;\n","import React from \"react\";\nimport { Contact } from \"../styles/Categories.styled\";\n\nexport default function HeaderList({ list }) {\n  return (\n    list.length > 0 &&\n    list.map((entry) => {\n      const { id, email, phone, name, website, github, linkedin } = entry;\n      return (\n        <Contact key={id}>\n          <p className=\"email\">{email.text}</p>\n          <p className=\"phone\">{phone.text}</p>\n          <p className=\"name\">{name.text}</p>\n          <p className=\"site\">{website.text}</p>\n          <p className=\"github\">GitHub: {github.text}</p>\n          <p className=\"linkedin\">LinkedIn: {linkedin.text}</p>\n        </Contact>\n      );\n    })\n  );\n}\n\n/*\nimport React from \"react\";\nimport { Contact } from \"../styles/Categories.styled\";\n\nexport default function HeaderList(props) {\n  const { list } = props;\n\n  return (\n    list.display === true && (\n      <Contact>\n        <p className=\"email\">{list.email.text}</p>\n        <p className=\"phone\">{list.phone.text}</p>\n        <p className=\"name\">{list.name.text}</p>\n        <p className=\"site\">{list.website.text}</p>\n        <p className=\"github\">GitHub: {list.github.text}</p>\n        <p className=\"linkedin\">LinkedIn: {list.linkedin.text}</p>\n      </Contact>\n    )\n  );\n}\n*/\n","import styled from \"styled-components\";\n\nconst StyledForm = styled.form`\n  background-color: #e0e0e0;\n\n  @media (max-width: ${({ theme }) => theme.mobile}) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    & > label {\n      align-self: normal;\n      line-height: 1.75;\n      padding-left: 5%;\n    }\n\n    & > input {\n      width: 90%;\n    }\n  }\n\n  @media (min-width: ${({ theme }) => theme.mobile}) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport default StyledForm;\n","import styled from \"styled-components\";\n\n/* Remember width variable is temporary, create a layout variable */\n\nconst StyledButton = styled.button`\n  background-color: ${({ color }) => color || \"#595959\"};\n  border: none;\n  border-radius: ${({ radius }) => radius || \"0px\"};\n  color: white;\n  cursor: pointer;\n  font-weight: bold;\n  margin-top: ${({ top }) => top || \"10px\"};\n  min-height: 46px;\n  min-width: 46px;\n  width: ${({ size }) => size || \"100%\"};\n\n  &:active {\n    opacity: 0.9;\n    transform: scale(0.98);\n  }\n`;\n\nexport default StyledButton;\n","import React from \"react\";\nimport Input from \"./Input\";\nimport ContactList from \"./ContactList\";\nimport StyledForm from \"../styles/Form.styled\";\nimport StyledButton from \"../styles/Button.styled\";\nimport { Category } from \"../styles/Categories.styled\";\n\nexport default function ContactCategory({ data }) {\n  const { entry, list, handleSubmit, handleChange, deleteList } = data;\n  const { email, phone, name, website, github, linkedin } = entry;\n\n  return (\n    <Category>\n      <hr />\n      <StyledForm onSubmit={handleSubmit}>\n        <Input data={email} onChange={handleChange} required />\n        <Input data={phone} onChange={handleChange} required />\n        <Input data={name} onChange={handleChange} required />\n        <Input data={website} onChange={handleChange} />\n        <Input data={github} onChange={handleChange} />\n        <Input data={linkedin} onChange={handleChange} />\n        <StyledButton type=\"submit\" onClick={() => deleteList(list)}>\n          Submit\n        </StyledButton>\n      </StyledForm>\n      <ContactList list={list} />\n    </Category>\n  );\n}\n\n/*\nimport React from \"react\";\nimport Input from \"./Input\";\nimport useHelper from \"../utils/useHelper\";\nimport ContactList from \"./ContactList\";\nimport StyledForm from \"../styles/Form.styled\";\nimport StyledButton from \"../styles/Button.styled\";\nimport { Category } from \"../styles/Categories.styled\";\n\nexport default function ContactCategory(props) {\n  const { data } = props;\n  const userData = useHelper({ ...data });\n\n  return (\n    <Category>\n      <hr />\n      <StyledForm onSubmit={userData.handleSubmit}>\n        <Input\n          data={userData.entry.email}\n          onChange={userData.handleChange}\n          required\n        />\n        <Input\n          data={userData.entry.phone}\n          onChange={userData.handleChange}\n          required\n        />\n        <Input\n          data={userData.entry.name}\n          onChange={userData.handleChange}\n          required\n        />\n        <Input data={userData.entry.website} onChange={userData.handleChange} />\n        <Input data={userData.entry.github} onChange={userData.handleChange} />\n        <Input\n          data={userData.entry.linkedin}\n          onChange={userData.handleChange}\n        />\n        <StyledButton type=\"submit\">Submit</StyledButton>\n      </StyledForm>\n      <ContactList list={userData.list} />\n    </Category>\n  );\n}\n*/\n","// Remember to replace with moments.js at some point\n\nconst convertDate = (props) => {\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  const year = props.slice(0, 4).toString();\n  const month = props.slice(5, 7).toString();\n\n  const nameMonth = month === \"nt\" ? \"Present\" : months[[month] - 1];\n\n  const monthYear =\n    nameMonth === \"Present\" ? nameMonth : `${nameMonth} ${year}`;\n  return monthYear;\n};\n\nexport default convertDate;\n","import React from \"react\";\nimport StyledButton from \"../styles/Button.styled\";\nimport { Education } from \"../styles/Categories.styled\";\nimport convertDate from \"../utils/convertDate\";\n\nexport default function EducationList({ list, deleteEntry }) {\n  return (\n    list.length > 0 &&\n    list.map((entry) => {\n      const { id, location, college, dateFrom, dateTo, degree } = entry;\n      return (\n        <Education key={id}>\n          <p className=\"location\">{location.text}</p>\n          <p className=\"college\">{college.text}</p>\n          <p className=\"date\">\n            {convertDate(dateFrom.text)}\n            {\" - \"}\n            {convertDate(dateTo.text)}\n          </p>\n          <p className=\"degree\">{degree.text}</p>\n          <StyledButton\n            color=\"red\"\n            type=\"button\"\n            onClick={() => deleteEntry(entry)}\n          >\n            Delete\n          </StyledButton>\n        </Education>\n      );\n    })\n  );\n}\n\n/*\nimport React from \"react\";\nimport StyledButton from \"../styles/Button.styled\";\nimport { Education } from \"../styles/Categories.styled\";\nimport convertDate from \"../utils/convertDate\";\n\nexport default function EducationList(props) {\n  const { list, deleteEntry } = props;\n\n  return (\n    list.length > 0 &&\n    list.map((entry) => {\n      return (\n        <Education key={entry.id}>\n          <p className=\"location\">{entry.location.text}</p>\n          <p className=\"college\">{entry.college.text}</p>\n          <p className=\"date\">\n            {convertDate(entry.dateFrom.text)}\n            {\" - \"}\n            {convertDate(entry.dateTo.text)}\n          </p>\n          <p className=\"degree\">{entry.degree.text}</p>\n          <StyledButton\n            color=\"red\"\n            type=\"button\"\n            onClick={() => deleteEntry(entry)}\n          >\n            Delete\n          </StyledButton>\n        </Education>\n      );\n    })\n  );\n}\n*/\n","import React from \"react\";\nimport Input from \"./Input\";\nimport EducationList from \"./EducationList\";\nimport StyledForm from \"../styles/Form.styled\";\nimport StyledButton from \"../styles/Button.styled\";\nimport { Category } from \"../styles/Categories.styled\";\n\nexport default function EducationCategory({ data }) {\n  const { entry, list, handleSubmit, handleChange, deleteEntry } = data;\n  const { location, college, dateFrom, dateTo, degree } = entry;\n\n  return (\n    <Category>\n      <h2>Education</h2>\n      <hr />\n      <StyledForm onSubmit={handleSubmit}>\n        <Input data={location} onChange={handleChange} />\n        <Input data={college} onChange={handleChange} />\n        <Input data={dateFrom} onChange={handleChange} />\n        <Input data={dateTo} onChange={handleChange} />\n        <Input data={degree} onChange={handleChange} />\n        <StyledButton type=\"submit\">Submit</StyledButton>\n      </StyledForm>\n      <EducationList list={list} deleteEntry={deleteEntry} />\n    </Category>\n  );\n}\n\n/*\nimport React from \"react\";\nimport Input from \"./Input\";\nimport useHelper from \"../utils/useHelper\";\nimport EducationList from \"./EducationList\";\nimport StyledForm from \"../styles/Form.styled\";\nimport StyledButton from \"../styles/Button.styled\";\nimport { Category } from \"../styles/Categories.styled\";\n\nexport default function EducationCategory(props) {\n  const { data } = props;\n  const userData = useHelper({ ...data });\n\n  return (\n    <Category>\n      <h2>Education</h2>\n      <hr />\n      <StyledForm onSubmit={userData.handleSubmitExt}>\n        <Input\n          data={userData.entry.location}\n          onChange={userData.handleChange}\n        />\n        <Input data={userData.entry.college} onChange={userData.handleChange} />\n        <Input\n          data={userData.entry.dateFrom}\n          onChange={userData.handleChange}\n        />\n        <Input data={userData.entry.dateTo} onChange={userData.handleChange} />\n        <Input data={userData.entry.degree} onChange={userData.handleChange} />\n        <StyledButton type=\"submit\">Submit</StyledButton>\n      </StyledForm>\n      <EducationList list={userData.list} deleteEntry={userData.deleteEntry} />\n    </Category>\n  );\n}\n*/\n","import React from \"react\";\nimport StyledButton from \"../styles/Button.styled\";\nimport { Employment } from \"../styles/Categories.styled\";\nimport convertDate from \"../utils/convertDate\";\n\nexport default function EmploymentList({ list, deleteEntry }) {\n  return (\n    list.length > 0 &&\n    list.map((entry) => {\n      const { id, job, company, dateFrom, dateTo, details } = entry;\n      return (\n        <Employment key={id}>\n          <p className=\"job\">{job.text}</p>\n          <p className=\"company\">{company.text}</p>\n          <p className=\"date\">\n            {convertDate(dateFrom.text)} {\" - \"}\n            {convertDate(dateTo.text)}\n          </p>\n          <ul className=\"list\">\n            {details.length > 0 &&\n              details.map((detail) => <li key={detail.id}>{detail.text}</li>)}\n          </ul>\n          <StyledButton\n            color=\"red\"\n            type=\"button\"\n            onClick={() => deleteEntry(entry)}\n          >\n            Delete\n          </StyledButton>\n        </Employment>\n      );\n    })\n  );\n}\n\n/*\nimport React from \"react\";\nimport StyledButton from \"../styles/Button.styled\";\nimport { Employment } from \"../styles/Categories.styled\";\nimport convertDate from \"../utils/convertDate\";\n\nexport default function EmploymentList(props) {\n  const { list, deleteEntry } = props;\n\n  return (\n    list.length > 0 &&\n    list.map((entry) => {\n      return (\n        <Employment key={entry.id}>\n          <p className=\"job\">{entry.job.text}</p>\n          <p className=\"company\">{entry.company.text}</p>\n          <p className=\"date\">\n            {convertDate(entry.dateFrom.text)} {\" - \"}\n            {entry.dateTo.text === \"Present\"\n              ? \"Present\"\n              : convertDate(entry.dateTo.text)}\n          </p>\n          <ul className=\"list\">\n            {entry.details.length > 0 &&\n              entry.details.map((detail) => (\n                <li key={detail.id}>{detail.text}</li>\n              ))}\n          </ul>\n          <StyledButton\n            color=\"red\"\n            type=\"button\"\n            onClick={() => deleteEntry(entry)}\n          >\n            Delete\n          </StyledButton>\n        </Employment>\n      );\n    })\n  );\n}\n*/\n","import React from \"react\";\nimport StyledButton from \"../styles/Button.styled\";\n\nexport default function PreviewDetails({ entry, deleteDetail }) {\n  return (\n    <ul>\n      {entry.details.length > 0 &&\n        entry.details.map((detail) => (\n          <li key={detail.id}>\n            {detail.text}{\" \"}\n            <StyledButton\n              top=\"0px\"\n              color=\"red\"\n              type=\"button\"\n              onClick={() => deleteDetail(detail)}\n            >\n              Delete\n            </StyledButton>\n          </li>\n        ))}\n    </ul>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Input from \"./Input\";\nimport EmploymentList from \"./EmploymentList\";\nimport PreviewDetails from \"./PreviewDetails\";\nimport StyledForm from \"../styles/Form.styled\";\nimport StyledButton from \"../styles/Button.styled\";\nimport { Category } from \"../styles/Categories.styled\";\n\nexport default function EmploymentCategory({ data }) {\n  const {\n    entry,\n    list,\n    handleSubmit,\n    handleChange,\n    addDetail,\n    deleteDetail,\n    deleteEntry,\n  } = data;\n  const { job, company, dateFrom, dateTo, detailInput } = entry;\n\n  /* \n  dateTo checkbox element synced with month type input element\n    - checkbox passes text value to month input which expects only dates\n        likely unavoidable with current data structure\n  */\n  useEffect(() => {\n    const employForm = document.querySelector(\"form[name=employForm]\");\n    const monthInput = employForm.elements.dateTo[0];\n    const checkboxInput = employForm.elements.dateTo[1];\n\n    employForm.addEventListener(\"submit\", () => {\n      checkboxInput.checked = false;\n      monthInput.removeAttribute(\"disabled\");\n    });\n\n    checkboxInput.addEventListener(\"click\", () => {\n      if (checkboxInput.checked) {\n        monthInput.setAttribute(\"disabled\", \"\");\n      } else {\n        monthInput.removeAttribute(\"disabled\");\n      }\n    });\n  }, []);\n\n  return (\n    <Category>\n      <h2>Employment</h2>\n      <hr />\n      <StyledForm name=\"employForm\" onSubmit={handleSubmit}>\n        <Input data={job} onChange={handleChange} />\n        <Input data={company} onChange={handleChange} />\n        <Input data={dateFrom} onChange={handleChange} />\n        <Input data={dateTo} onChange={handleChange} />\n        <>\n          <label htmlFor=\"dateTo\">\n            <input\n              type=\"checkbox\"\n              name=\"dateTo\"\n              value=\"Present\"\n              onChange={handleChange}\n            />\n            Present\n          </label>\n        </>\n        <Input data={detailInput} onChange={handleChange} />{\" \"}\n        <StyledButton\n          top=\"5px\"\n          color=\"#2822bf\"\n          size=\"90%\"\n          type=\"button\"\n          radius=\"5px\"\n          onClick={addDetail}\n        >\n          Add Detail\n        </StyledButton>\n        <PreviewDetails entry={entry} deleteDetail={deleteDetail} />\n        <StyledButton type=\"submit\">Submit</StyledButton>\n      </StyledForm>\n      <EmploymentList list={list} deleteEntry={deleteEntry} />\n    </Category>\n  );\n}\n\n/*\nimport React, { useEffect } from \"react\";\nimport Input from \"./Input\";\nimport useHelper from \"../utils/useHelper\";\nimport EmploymentList from \"./EmploymentList\";\nimport PreviewDetails from \"./PreviewDetails\";\nimport StyledForm from \"../styles/Form.styled\";\nimport StyledButton from \"../styles/Button.styled\";\nimport { Category } from \"../styles/Categories.styled\";\n\nexport default function EmploymentCategory(props) {\n  const { data } = props;\n  const userData = useHelper({ ...data });\n\n\n  dateTo checkbox element synced with month type input element\n    - checkbox passes text value to month input which expects only dates\n        likely unavoidable with current data structure\n\n        useEffect(() => {\n          const employForm = document.querySelector(\"form[name=employForm]\");\n          const monthInput = employForm.elements.dateTo[0];\n          const checkboxInput = employForm.elements.dateTo[1];\n      \n          employForm.addEventListener(\"submit\", () => {\n            checkboxInput.checked = false;\n            monthInput.removeAttribute(\"disabled\");\n          });\n      \n          checkboxInput.addEventListener(\"click\", () => {\n            if (checkboxInput.checked) {\n              monthInput.setAttribute(\"disabled\", \"\");\n            } else {\n              monthInput.removeAttribute(\"disabled\");\n            }\n          });\n        }, []);\n      \n        return (\n          <Category>\n            <h2>Employment</h2>\n            <hr />\n            <StyledForm name=\"employForm\" onSubmit={userData.handleSubmitExt}>\n              <Input data={userData.entry.job} onChange={userData.handleChange} />\n              <Input data={userData.entry.company} onChange={userData.handleChange} />\n              <Input\n                data={userData.entry.dateFrom}\n                onChange={userData.handleChange}\n              />\n              <Input data={userData.entry.dateTo} onChange={userData.handleChange} />\n              <>\n                <label htmlFor=\"dateTo\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"dateTo\"\n                    value=\"Present\"\n                    onChange={userData.handleChange}\n                  />\n                  Present\n                </label>\n              </>\n              <Input\n                data={userData.entry.detailInput}\n                onChange={userData.handleChange}\n              />{\" \"}\n              <StyledButton\n                top=\"5px\"\n                color=\"#2822bf\"\n                size=\"90%\"\n                type=\"button\"\n                radius=\"5px\"\n                onClick={userData.addDetail}\n              >\n                Add Detail\n              </StyledButton>\n              <PreviewDetails\n                entry={userData.entry}\n                deleteDetail={userData.deleteDetail}\n              />\n              <StyledButton type=\"submit\">Submit</StyledButton>\n            </StyledForm>\n            <EmploymentList list={userData.list} deleteEntry={userData.deleteEntry} />\n          </Category>\n        );\n      }      \n*/\n","import React from \"react\";\nimport StyledButton from \"../styles/Button.styled\";\nimport { Project } from \"../styles/Categories.styled\";\n\nexport default function ProjectList({ list, deleteEntry }) {\n  return (\n    list.length > 0 &&\n    list.map((entry) => {\n      const { id, pName, link, details } = entry;\n      return (\n        <Project key={id}>\n          <p className=\"title\">{pName.text}</p>\n          <p className=\"link\">{link.text}</p>\n          <ul className=\"list\">\n            {details.length > 0 &&\n              details.map((detail) => <li key={detail.id}>{detail.text}</li>)}\n          </ul>\n          <StyledButton\n            color=\"red\"\n            type=\"button\"\n            onClick={() => deleteEntry(entry)}\n          >\n            Delete\n          </StyledButton>\n        </Project>\n      );\n    })\n  );\n}\n\n/*\nimport React from \"react\";\nimport StyledButton from \"../styles/Button.styled\";\nimport { Project } from \"../styles/Categories.styled\";\n\nexport default function ProjectList(props) {\n  const { list, deleteEntry } = props;\n\n  return (\n    list.length > 0 &&\n    list.map((entry) => {\n      return (\n        <Project key={entry.id}>\n          <p className=\"title\">{entry.pName.text}</p>\n          <p className=\"link\">{entry.link.text}</p>\n          <ul className=\"list\">\n            {entry.details.length > 0 &&\n              entry.details.map((detail) => (\n                <li key={detail.id}>{detail.text}</li>\n              ))}\n          </ul>\n          <StyledButton\n            color=\"red\"\n            type=\"button\"\n            onClick={() => deleteEntry(entry)}\n          >\n            Delete\n          </StyledButton>\n        </Project>\n      );\n    })\n  );\n}\n*/\n","import React from \"react\";\nimport Input from \"./Input\";\nimport ProjectList from \"./ProjectList\";\nimport PreviewDetails from \"./PreviewDetails\";\nimport StyledButton from \"../styles/Button.styled\";\nimport StyledForm from \"../styles/Form.styled\";\nimport { Category } from \"../styles/Categories.styled\";\n\nexport default function ProjectCategory({ data }) {\n  const {\n    entry,\n    list,\n    handleSubmit,\n    handleChange,\n    addDetail,\n    deleteDetail,\n    deleteEntry,\n  } = data;\n  const { pName, link, detailInput } = entry;\n\n  return (\n    <Category>\n      <h2>Projects</h2>\n      <hr />\n      <StyledForm onSubmit={handleSubmit}>\n        <Input data={pName} onChange={handleChange} required />\n        <Input data={link} onChange={handleChange} />\n        <Input data={detailInput} onChange={handleChange} />\n        <StyledButton\n          top=\"5px\"\n          color=\"#2822bf\"\n          type=\"button\"\n          size=\"90%\"\n          radius=\"5px\"\n          onClick={addDetail}\n        >\n          Add Detail\n        </StyledButton>\n        <PreviewDetails entry={entry} deleteDetail={deleteDetail} />\n        <StyledButton type=\"submit\">Submit</StyledButton>\n      </StyledForm>\n      <ProjectList list={list} deleteEntry={deleteEntry} />\n    </Category>\n  );\n}\n\n/*\nimport React from \"react\";\nimport Input from \"./Input\";\nimport useHelper from \"../utils/useHelper\";\nimport ProjectList from \"./ProjectList\";\nimport PreviewDetails from \"./PreviewDetails\";\nimport StyledButton from \"../styles/Button.styled\";\nimport StyledForm from \"../styles/Form.styled\";\nimport { Category } from \"../styles/Categories.styled\";\n\nexport default function ProjectCategory(props) {\n  const { data } = props;\n  const userData = useHelper({ ...data });\n\n  return (\n    <Category>\n      <h2>Projects</h2>\n      <hr />\n      <StyledForm onSubmit={userData.handleSubmitExt}>\n        <Input\n          data={userData.entry.pName}\n          onChange={userData.handleChange}\n          required\n        />\n        <Input data={userData.entry.link} onChange={userData.handleChange} />\n        <Input\n          data={userData.entry.detailInput}\n          onChange={userData.handleChange}\n        />\n        <StyledButton\n          top=\"5px\"\n          color=\"#2822bf\"\n          type=\"button\"\n          size=\"90%\"\n          radius=\"5px\"\n          onClick={userData.addDetail}\n        >\n          Add Detail\n        </StyledButton>\n        <PreviewDetails\n          entry={userData.entry}\n          deleteDetail={userData.deleteDetail}\n        />\n        <StyledButton type=\"submit\">Submit</StyledButton>\n      </StyledForm>\n      <ProjectList list={userData.list} deleteEntry={userData.deleteEntry} />\n    </Category>\n  );\n}\n*/\n","import React from \"react\";\nimport { Technical } from \"../styles/Categories.styled\";\n\nexport default function TechnicalList({ list }) {\n  return (\n    list.length > 0 &&\n    list.map((entry) => {\n      const { id, languages, frameLibs, tools } = entry;\n      return (\n        <Technical key={id}>\n          <p>Languages: {languages.text}</p>\n          <p>Frameworks & Libraries: {frameLibs.text}</p>\n          <p>Tools: {tools.text}</p>\n        </Technical>\n      );\n    })\n  );\n}\n\n/* \nexport default function TechnicalList({ list }) {\n  return (\n    list.display === true && (\n      <Technical>\n        <p>Languages: {list.languages.text}</p>\n        <p>Frameworks and Libraries: {list.frameLibs.text}</p>\n        <p>Tools: {list.tools.text}</p>\n      </Technical>\n    )\n  );\n}\n*/\n","import React from \"react\";\nimport Input from \"./Input\";\nimport TechnicalList from \"./TechnicalList\";\nimport StyledForm from \"../styles/Form.styled\";\nimport StyledButton from \"../styles/Button.styled\";\nimport { Category } from \"../styles/Categories.styled\";\n\nexport default function TechnicalCategory({ data }) {\n  const { entry, list, handleChange, handleSubmit, deleteList } = data;\n  const { languages, frameLibs, tools } = entry;\n\n  return (\n    <Category>\n      <h2>Technical Skills</h2>\n      <hr />\n      <StyledForm onSubmit={handleSubmit}>\n        <Input data={languages} onChange={handleChange} />\n        <Input data={frameLibs} onChange={handleChange} />\n        <Input data={tools} onChange={handleChange} />\n        <StyledButton type=\"submit\" onClick={() => deleteList(list)}>\n          Submit\n        </StyledButton>\n      </StyledForm>\n      <TechnicalList list={list} />\n    </Category>\n  );\n}\n\n/* \nimport React from \"react\";\nimport Input from \"./Input\";\nimport useHelper from \"../utils/useHelper\";\nimport TechnicalList from \"./TechnicalList\";\nimport StyledForm from \"../styles/Form.styled\";\nimport StyledButton from \"../styles/Button.styled\";\nimport { Category } from \"../styles/Categories.styled\";\n\nexport default function TechnicalCategory({ data }) {\n  const userData = useHelper({ ...data });\n  const { languages, frameLibs, tools } = userData.entry;\n\n  return (\n    <Category>\n      <h2>Technical Skills</h2>\n      <hr />\n      <StyledForm onSubmit={userData.handleSubmit}>\n        <Input data={languages} onChange={userData.handleChange} />\n        <Input data={frameLibs} onChange={userData.handleChange} />\n        <Input data={tools} onChange={userData.handleChange} />\n        <StyledButton type=\"submit\">Submit</StyledButton>\n      </StyledForm>\n      <TechnicalList list={userData.list} />\n    </Category>\n  );\n}\n*/\n","import React from \"react\";\nimport {\n  Document,\n  Page,\n  Text,\n  Link,\n  View,\n  StyleSheet,\n} from \"@react-pdf/renderer\";\nimport convertDate from \"../utils/convertDate\";\n\n// Create styles\nconst global = StyleSheet.create({\n  body: {\n    fontFamily: \"Times-Roman\",\n    fontSize: 12,\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n  },\n  bullet: {\n    left: 13,\n    position: \"absolute\",\n    top: 3,\n  },\n  detail: {\n    paddingTop: 3,\n    paddingLeft: 25,\n  },\n  header: {\n    borderBottom: 1,\n    fontSize: 16,\n    fontFamily: \"Times-Bold\",\n    marginBottom: 5,\n    marginTop: 13,\n    paddingBottom: 2,\n    paddingLeft: 10,\n  },\n  section: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"end\",\n  },\n  viewer: {\n    width: window.innerWidth,\n    maxWidth: 820,\n    height: window.innerHeight,\n  },\n});\n\nconst contactStyles = StyleSheet.create({\n  email: {\n    alignSelf: \"flex-end\",\n    flex: 0.4,\n  },\n  github: {\n    alignSelf: \"flex-end\",\n    flex: 0.4,\n    textAlign: \"right\",\n  },\n  linkedin: {\n    flex: 0.4,\n    textAlign: \"right\",\n  },\n  name: {\n    flex: 1,\n    fontSize: 24,\n    fontFamily: \"Times-Bold\",\n    textAlign: \"center\",\n  },\n  phone: {\n    flex: 0.4,\n  },\n  website: {\n    flex: 1,\n    textAlign: \"center\",\n  },\n});\n\nconst educationStyles = StyleSheet.create({\n  location: {\n    flex: 0.4,\n    fontFamily: \"Times-Bold\",\n  },\n  college: {\n    flex: 1,\n    fontFamily: \"Times-Bold\",\n    textAlign: \"center\",\n  },\n  date: {\n    flex: 0.4,\n    fontFamily: \"Times-Bold\",\n    right: -0,\n    // Styling this PDF is genuinely awful\n    position: \"absolute\",\n  },\n  degree: {\n    paddingBottom: 7.5,\n    textAlign: \"center\",\n  },\n});\n\nconst employmentStyles = StyleSheet.create({\n  marginBottom: 5,\n\n  job: {\n    flex: 0.4,\n    fontFamily: \"Times-Bold\",\n    textAlign: \"start\",\n  },\n  company: {\n    flex: 1,\n    fontFamily: \"Times-Bold\",\n    textAlign: \"center\",\n    paddingBottom: 15,\n  },\n  date: {\n    flex: 0.4,\n    fontFamily: \"Times-Bold\",\n    right: -0,\n    position: \"absolute\",\n  },\n  detail: {\n    /* top: 14,\n    paddingTop: 3,\n    left: 25, */\n  },\n  bullet: {\n    /* position: \"absolute\",\n    left: 13,\n    top: 17, */\n  },\n});\n\nconst projectStyles = StyleSheet.create({\n  marginBottom: 5,\n\n  pName: {\n    fontFamily: \"Times-Bold\",\n    paddingBottom: 2,\n  },\n  link: {\n    fontFamily: \"Times-Italic\",\n    paddingBottom: 2,\n  },\n  details: {\n    paddingLeft: 15,\n  },\n});\n\nconst technicalStyles = StyleSheet.create({\n  languages: {\n    paddingBottom: 2,\n  },\n  frameLibs: {\n    paddingBottom: 2,\n  },\n  tools: {},\n});\n\n// Create Document Component\nconst BasicDocument = ({\n  contact,\n  education,\n  employment,\n  project,\n  technical,\n}) => {\n  return (\n    <Document>\n      {/* FYI: Make a general styles object */}\n      <Page size=\"A4\" style={global.body}>\n        {/* Contact Category */}\n        <>\n          {contact.map((entry) => {\n            const { id, email, phone, name, website, github, linkedin } = entry;\n            return (\n              <View key={id}>\n                <View style={global.section}>\n                  <Text style={contactStyles.email}>{email.text}</Text>\n                  <Text style={contactStyles.name}>{name.text}</Text>\n                  <Text style={contactStyles.github}>\n                    Github: {github.text}\n                  </Text>\n                </View>\n                <View style={global.section}>\n                  <Text style={contactStyles.phone}>{phone.text}</Text>\n                  <Text style={contactStyles.website}>{website.text}</Text>\n                  <Text style={contactStyles.linkedin}>\n                    LinkedIn: {linkedin.text}\n                  </Text>\n                </View>\n              </View>\n            );\n          })}\n        </>\n        {/* Education Category */}\n        <>\n          <Text style={global.header}>Education</Text>\n          {education.map((entry) => {\n            const { id, location, college, dateFrom, dateTo, degree } = entry;\n            return (\n              <View key={id}>\n                <View style={educationStyles}>\n                  <Text style={educationStyles.location}>{location.text}</Text>\n                  <Text style={educationStyles.college}>{college.text}</Text>\n                  <Text style={educationStyles.date}>\n                    {convertDate(dateFrom.text)}\n                    {\" - \"}\n                    {convertDate(dateTo.text)}\n                  </Text>\n                </View>\n                <Text style={educationStyles.degree}>\n                  {\"\\n\"}\n                  {degree.text}\n                </Text>\n              </View>\n            );\n          })}\n        </>\n        {/* Employment Category */}\n        <>\n          <Text style={global.header}>Employment</Text>\n          {employment.map((entry) => {\n            const { id, job, company, dateFrom, dateTo, details } = entry;\n            return (\n              <View style={employmentStyles} key={id}>\n                <Text style={employmentStyles.job}>{job.text}</Text>\n                <Text style={employmentStyles.company}>{company.text}</Text>\n                <Text style={employmentStyles.date}>\n                  {convertDate(dateFrom.text)} - {convertDate(dateTo.text)}\n                </Text>\n                {details.map((detail) => {\n                  return (\n                    <View style={global.detail} key={detail.id}>\n                      <Text style={global.bullet}>•</Text>\n                      <Text>{detail.text}</Text>\n                    </View>\n                  );\n                })}\n              </View>\n            );\n          })}\n        </>\n        {/* Project Category */}\n        <>\n          <Text style={global.header}>Projects</Text>\n          {project.map((entry) => {\n            const { id, pName, link, details } = entry;\n            return (\n              <View style={projectStyles} key={id}>\n                <Text style={projectStyles.pName}>{pName.text}</Text>\n                <Link href={link.text} style={projectStyles.link}>\n                  {link.text}\n                </Link>\n                {details.map((detail) => {\n                  return (\n                    <View style={global.detail} key={detail.id}>\n                      <Text style={global.bullet}>•</Text>\n                      <Text>{detail.text}</Text>\n                    </View>\n                  );\n                })}\n              </View>\n            );\n          })}\n        </>\n        {/* Technical Category */}\n        <>\n          <Text style={global.header}>Technical Skills</Text>\n          {technical.map((entry) => {\n            const { id, languages, frameLibs, tools } = entry;\n            return (\n              <View key={id}>\n                <Text style={technicalStyles.languages}>\n                  Languages: {languages.text}\n                </Text>\n                <Text style={technicalStyles.frameLibs}>\n                  Framework and Libraries: {frameLibs.text}\n                </Text>\n                <Text style={technicalStyles.tools}>Tools: {tools.text}</Text>\n              </View>\n            );\n          })}\n        </>\n      </Page>\n    </Document>\n  );\n};\n\nexport default BasicDocument;\n","import styled from \"styled-components\";\n\nconst StyledFooter = styled.footer`\n  background-color: #e0e0e0;\n  border-top: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n\n  a {\n    display: contents;\n    color: black;\n    font-weight: bold;\n    text-decoration: none;\n  }\n\n  p {\n    font-size: 10px;\n  }\n\n  span {\n    display: flex;\n    padding-top: 10px;\n    margin: 0 auto;\n    justify-content: center;\n    padding-bottom: 5px;\n    width: 25%;\n    gap: 5px;\n  }\n\n  span > .child {\n    margin-right: 5px;\n  }\n\n  svg {\n    align-self: center;\n    font-size: 35px;\n  }\n`;\n\nexport default StyledFooter;\n","import React from \"react\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { MdEmail } from \"react-icons/md\";\nimport StyledFooter from \"../styles/Footer.styled\";\n\nexport default function Footer() {\n  return (\n    <StyledFooter>\n      <span>\n        <a\n          title=\"Github Profile\"\n          target=\"_blank\"\n          href=\"https://github.com/jayxp\"\n          rel=\"noreferrer noopener\"\n        >\n          <FaGithub />\n        </a>\n        <a title=\"Send Email\" href=\"mailto:pattenjaym@gmail.com\">\n          <MdEmail />\n        </a>\n      </span>\n      <p>\n        Made with ♥ by{\" \"}\n        <a\n          target=\"_blank\"\n          href=\"https://github.com/jayxp\"\n          rel=\"noreferrer noopener\"\n        >\n          Jayxp\n        </a>\n      </p>\n    </StyledFooter>\n  );\n}\n","import uniqid from \"uniqid\";\n\nconst contactData = {\n  id: uniqid(),\n  email: {\n    text: \"firstlast@mail.com\",\n    name: \"email\",\n    type: \"email\",\n    description: \"Email Address\",\n    example: \"mail@example.com\",\n  },\n  phone: {\n    text: \"1234567890\",\n    name: \"phone\",\n    type: \"tel\",\n    description: \"Phone Number\",\n    example: \"(999) 999-9999\",\n  },\n  name: {\n    text: \"First Last\",\n    name: \"name\",\n    type: \"text\",\n    description: \"Full Name\",\n    example: \"John Doe\",\n  },\n  website: {\n    text: \"https://example.com\",\n    name: \"website\",\n    type: \"url\",\n    description: \"Personal Website\",\n    example: \"https://example.com\",\n  },\n  github: {\n    text: \"example\",\n    name: \"github\",\n    type: \"text\",\n    description: \"GitHub Handle\",\n    example: \"username\",\n  },\n  linkedin: {\n    text: \"Example\",\n    name: \"linkedin\",\n    type: \"text\",\n    description: \"LinkedIn Handle\",\n    example: \"username\",\n  },\n};\n\nconst educationData = {\n  id: uniqid(),\n  location: {\n    text: \"City, State\",\n    name: \"location\",\n    type: \"text\",\n    description: \"Location\",\n    example: \"City, State\",\n  },\n  college: {\n    text: \"University of Example\",\n    name: \"college\",\n    type: \"text\",\n    description: \"College\",\n    example: \"University of X\",\n  },\n  dateFrom: {\n    text: \"2014-08\",\n    name: \"dateFrom\",\n    type: \"month\",\n    description: \"Date From\",\n    example: \"2014-08\",\n  },\n  dateTo: {\n    text: \"2018-05\",\n    name: \"dateTo\",\n    type: \"month\",\n    description: \"Date To\",\n    example: \"2018-05\",\n  },\n  degree: {\n    text: \"BS in Example Systems\",\n    name: \"degree\",\n    type: \"text\",\n    description: \"Degree Program\",\n    example: \"BS in X\",\n  },\n};\n\nconst employmentData = {\n  id: uniqid(),\n  job: {\n    text: \"Example Analyst\",\n    name: \"job\",\n    type: \"text\",\n    description: \"Position\",\n    example: \"Software Developer\",\n  },\n  company: {\n    text: \"Example Inc.\",\n    name: \"company\",\n    type: \"text\",\n    description: \"Company Name\",\n    example: \"Google\",\n  },\n  dateFrom: {\n    text: \"2018-06\",\n    name: \"dateFrom\",\n    type: \"month\",\n    description: \"Date From\",\n    example: \"2018-06\",\n  },\n  dateTo: {\n    text: \"2020-08\",\n    name: \"dateTo\",\n    type: \"month\",\n    description: \"Date To\",\n    example: \"2020-08\",\n  },\n  details: [],\n  detailInput: {\n    text: \"\",\n    name: \"detailInput\",\n    type: \"text\",\n    description: \"Details\",\n    example: \"Regular standups, sprints, ...\",\n  },\n};\n\nconst projectData = {\n  id: uniqid(),\n  pName: {\n    text: \"Example Project\",\n    name: \"pName\",\n    type: \"text\",\n    description: \"Project Name\",\n    example: \"Example Project\",\n  },\n  link: {\n    text: \"https://github.com/example/example-project\",\n    name: \"link\",\n    type: \"url\",\n    description: \"Project URL\",\n    example: \"https://github.com/user/link\",\n  },\n  details: [],\n  detailInput: {\n    text: \"\",\n    name: \"detailInput\",\n    type: \"text\",\n    description: \"Details\",\n    example: \"XYZ\",\n  },\n};\n\nconst technicalData = {\n  id: uniqid(),\n  languages: {\n    text: \"HTML, CSS, JavaScript, SQL, Python\",\n    name: \"languages\",\n    type: \"text\",\n    description: \"Languages\",\n    example: \"HTML, CSS, JavaScript, SQL, Python\",\n  },\n  frameLibs: {\n    text: \"React, React-Native, Node.js\",\n    name: \"frameLibs\",\n    type: \"text\",\n    description: \"Frameworks & Libraries\",\n    example: \"React, React-Native, Node.js\",\n  },\n  tools: {\n    text: \"Git, Linux, Webpack, NPM, Jira\",\n    name: \"tools\",\n    type: \"text\",\n    description: \"Tools\",\n    example: \"Git, Linux, Webpack, NPM, Jira\",\n  },\n};\n\nconst userData = {\n  contactData,\n  educationData,\n  employmentData,\n  projectData,\n  technicalData,\n};\n\nexport {\n  contactData,\n  educationData,\n  employmentData,\n  projectData,\n  technicalData,\n  userData,\n};\n","import styled from \"styled-components\";\n\nconst StyledResume = styled.main`\n  @media (min-width: ${({ theme }) => theme.mobile}) {\n    margin: 0 auto;\n    width: 80%;\n    border: none;\n    border-radius: 15px;\n    box-shadow: rgb(0 0 0 / 35%) 0px 6px 25px;\n    margin-bottom: 1rem;\n  }\n`;\n\nexport default StyledResume;\n","import { useState } from \"react\";\nimport uniqid from \"uniqid\";\n\nexport default function useHelper(props) {\n  const [list, setList] = useState([]);\n  const [entry, setEntry] = useState({ ...props });\n\n  const handleChange = (event) => {\n    setEntry((prevState) => {\n      // Handleconsole.log(event.target);\n      // console.log(prevState);\n      return {\n        ...prevState,\n        [event.target.name]: {\n          ...prevState[event.target.name],\n          text: event.target.value,\n        },\n      };\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setList(list.concat(entry));\n    setEntry({\n      ...props,\n      id: uniqid(),\n    });\n  };\n\n  const deleteList = () => {\n    setList([]);\n  };\n\n  const deleteEntry = (prop) => {\n    const newList = list.filter((e) => e.id !== prop.id);\n\n    setList([...newList]);\n  };\n\n  const addDetail = (event) => {\n    event.preventDefault();\n    setEntry((prevState) => {\n      return {\n        ...prevState,\n        details: prevState.details.concat({\n          ...entry.detailInput,\n          id: uniqid(),\n        }),\n        detailInput: { ...props.detailInput },\n      };\n    });\n  };\n\n  const deleteDetail = (prop) => {\n    const newList = entry.details.filter((e) => e.id !== prop.id);\n\n    setEntry({\n      ...entry,\n      details: [...newList],\n    });\n  };\n\n  return {\n    entry,\n    list,\n    deleteEntry,\n    addDetail,\n    deleteDetail,\n    deleteList,\n    handleSubmit,\n    handleChange,\n  };\n}\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport GlobalStyle from \"./styles/Global\";\nimport Header from \"./components/Header\";\nimport ContactCategory from \"./components/ContactCategory\";\nimport EducationCategory from \"./components/EducationCategory\";\nimport EmploymentCategory from \"./components/EmploymentCategory\";\nimport ProjectCategory from \"./components/ProjectCategory\";\nimport TechnicalCategory from \"./components/TechnicalCategory\";\nimport BasicDocument from \"./components/RenderPDF\";\nimport Footer from \"./components/Footer\";\nimport {\n  contactData,\n  educationData,\n  employmentData,\n  projectData,\n  technicalData,\n} from \"./data/userData\";\nimport StyledResume from \"./styles/Resume.styled\";\nimport useHelper from \"./utils/useHelper\";\nimport StyledButton from \"./styles/Button.styled\";\n\nconst theme = {\n  mobile: \"768px\",\n  tablet: \"1024px\",\n};\n\nexport default function App() {\n  /* Re-renders constantly, feels extremely inefficient.\n     Has to be a better way to do this than multiple state declarations.\n  */\n  const contactState = useHelper({ ...contactData });\n  const educationState = useHelper({ ...educationData });\n  const employmentState = useHelper({ ...employmentData });\n  const projectState = useHelper({ ...projectData });\n  const technicalState = useHelper({ ...technicalData });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Header />\n      <StyledResume>\n        <ContactCategory data={contactState} />\n        <EducationCategory data={educationState} />\n        <EmploymentCategory data={employmentState} />\n        <ProjectCategory data={projectState} />\n        <TechnicalCategory data={technicalState} />\n        <PDFDownloadLink\n          document={\n            <BasicDocument\n              contact={contactState.list}\n              education={educationState.list}\n              employment={employmentState.list}\n              project={projectState.list}\n              technical={technicalState.list}\n            />\n          }\n          fileName=\"genResume.pdf\"\n        >\n          {({ loading }) => (\n            <StyledButton color=\"#2cb30e\">\n              {loading ? \"Generating PDF\" : \"Download PDF\"}\n            </StyledButton>\n          )}\n        </PDFDownloadLink>\n      </StyledResume>\n      <Footer />\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}